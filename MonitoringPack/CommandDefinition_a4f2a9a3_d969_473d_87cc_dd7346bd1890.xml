<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<commandDefinition commandLanguage="PERL" name="Monitor_volumes" reservationRepresentation="" samplingIntervalInSeconds="10" stringRepresentation="&quot;volumes&quot;" timeoutInSeconds="600" type="STANDARD">
    <certification>NONE</certification>
    <uuid>a4f2a9a3-d969-473d-87cc-dd7346bd1890</uuid>
    <version>1.0.0</version>
    <command>#!/usr/bin/perl



use strict;
use Getopt::Long;
use WFAUtil;
my $Volume_Threshold;
GetOptions(
   &quot;Volume_Threshold=s&quot; =&gt;\$Volume_Threshold
) or die 'Illegal command parameters\n';


my $FileName;

my $FileNamePrefix = 'c:\Volume_Report';

#Creating CSV file name
$FileName = $FileNamePrefix.&quot;.csv&quot;;

my $wfa_util = WFAUtil-&gt;new();
$wfa_util-&gt;sendLog('INFO', 'Creating CSV file: ' . $FileName);

my $query=&quot;SELECT
    cluster.primary_address,
    vserver.name,volume.name,
   ceil(volume.size_mb/1024),ceil(volume.used_size_mb/1024),ceil(volume.available_size_mb/1024),
    ceil((( volume.used_size_mb) / volume.size_mb)* 100) AS vol_used_percent

FROM
    cm_storage.volume,
    cm_storage.vserver,
    cm_storage.cluster,
    cm_storage.aggregate,
    cm_storage.node

WHERE
    volume.vserver_id = vserver.id
    AND vserver.cluster_id = cluster.id
    AND volume.aggregate_id = aggregate.id
    AND aggregate.node_id = node.id
    AND (
        (
            volume.used_size_mb
        ) / volume.size_mb
    ) * 100 &gt;= '${Volume_Threshold}' ORDER BY vol_used_percent DESC

&quot;;
my $database=&quot;cm_storage&quot;;
my @data;
my $length;

eval {
@data = $wfa_util-&gt;invokeMySqlQuery($query,$database);

};

$length = @data;

open(FILE, &quot;&gt;$FileName&quot;);
print FILE &quot;Cluster IP,Node Name,Volume Name,Total Size (GB),Used Space (GB),Available (GB),Used Percentage (%)\n&quot;;
for (my $index =0; $index &lt; $length; $index++)
{
if ($data[$index] ne &quot;\n&quot;)
{
if ($data[$index] eq &quot;&quot;)
{
print FILE &quot;-,&quot;;
}
else {
print FILE &quot;$data[$index]&quot; . &quot;,&quot;;
}
}
else
{
print FILE $data[$index];
}
}
close(FILE);</command>
    <parameter-mappings>
        <parameter-mapping objectName="Volume_Threshold" parameterName="Volume_Threshold"/>
    </parameter-mappings>
    <congruenceTest></congruenceTest>
    <description>Lists details about all volumes above threshold in CSV file</description>
    <parameter-definitions>
        <parameter-definition description="Enter Volume threshold percent value between 0 to 100" isMandatory="true" name="Volume_Threshold" type="Integer">
            <uuid>4f1941ad-3ee4-4d8f-b24f-4b238e259df1</uuid>
        </parameter-definition>
    </parameter-definitions>
    <reservationScript></reservationScript>
    <schemeNames></schemeNames>
</commandDefinition>
